import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id "com.bmuschko.izpack" version "3.0"
}

apply from: "IO.gradle"

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
    jcenter()
}

dependencies {

    implementation 'io.rubrica:rubrica:1.0.0-SNAPSHOT'
    implementation 'org.apache.pdfbox:pdfbox:2.0.16'
    implementation 'com.twelvemonkeys.imageio:imageio-jpeg:3.4.1'
    implementation 'com.twelvemonkeys.imageio:imageio-tiff:3.4.1'
    implementation 'org.slf4j:slf4j-log4j12:1.7.26'
    testImplementation 'junit:junit:4.12'
    implementation 'com.github.jiconfont:jiconfont:1.0.0'
    implementation 'com.github.jiconfont:jiconfont-swing:1.0.1'
    implementation 'com.github.jiconfont:jiconfont-font_awesome:4.7.0.1'
    implementation 'com.github.jiconfont:jiconfont-google_material_design_icons:2.2.0.2'
        implementation 'org.apache.commons:commons-io:1.3.2'   
    implementation 'org.apache.commons:commons-lang3:3.1'

    izpack 'org.codehaus.izpack:izpack-ant:5.1.3'
    implementation 'com.bmuschko:gradle-izpack-plugin:3.0'
    implementation fileTree(dir: 'lib', include: '*.jar')
    
}

application {
    mainClass = 'com.github.klascano.librefirma.firmador.Main'
}

group = 'com.github.klascano.librefirma'
version = '1.0.0'
description = 'Firmador electronico libre'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task generaConfigInstall(type: Copy) {
    from 'src/main/installer'
    into 'src/main/installer'
    include('installer_config.xml')
    rename ('installer_config.xml', 'installer_config_generated.xml')
    filter(ReplaceTokens, tokens: [RUTA_BINARIOS: buildDir.getPath()+ '/install/librefirma' ])
}

task crearInstalador(dependsOn: ['build','installDist','generaConfigInstall']){
    doLast {
        javaexec {
        	standardOutput = System.out
  			errorOutput = System.err
            main = 'com.izforge.izpack.compiler.bootstrap.CompilerLauncher'
            classpath = configurations.izpack
            args = [
                "$projectDir/src/main/installer/installer_config_generated.xml",
                "-b",
                "$projectDir/src/main/installer/",
                "-o",
                "$buildDir/distributions/librefirma_installer.jar",
                "-c",
                "default",
                "-l",
                "9",
                "-k",
                "standard"
            ]
        }
    }
}

startScripts { 
	doLast {
	  def startScriptDir = outputDir.getAbsolutePath()
	  def winStartScript = startScriptDir + "/" + applicationName + ".bat"
	  def winStartScriptCopy = startScriptDir + "/" + applicationName + "_console.bat"
	  def overwriteExistingFile = true
	  copyFile(winStartScript, winStartScriptCopy, overwriteExistingFile)
	
	  modifyFile(winStartScript) {
	    // javaw.exe doesn't have a console
	    if(it.contains("java.exe")){
	      return it.replace("java.exe", "javaw.exe")
	    }
	    // Command that launches the app
	    else if(it.startsWith("\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS%")){
	      return "start \"\" /b " + it
	    }
	    // Leave the line unchanged
	    else{
	      return it
	    }
	  }
  }
}
